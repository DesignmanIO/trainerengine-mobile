{"version":3,"file":"pubnub-react.cjs.production.min.js","sources":["../src/context/PubNubContext.tsx","../src/context/PubNubConsumer.tsx","../src/context/PubNubProvider.tsx","../src/hooks/usePubNub.ts"],"sourcesContent":["import React from 'react';\n\nexport interface PubNubContextValue {\n  client?: object;\n  renderPromises?: Record<any, any>;\n}\n\nlet pubNubContext: React.Context<PubNubContextValue>;\n\nexport function getPubNubContext() {\n  if (!pubNubContext) {\n    pubNubContext = React.createContext<PubNubContextValue>({});\n  }\n  return pubNubContext;\n}\n\nexport function resetPubNubContext() {\n  pubNubContext = React.createContext<PubNubContextValue>({});\n}\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from './PubNubContext';\n\nexport interface PubNubConsumerProps {\n  children: (client: object) => React.ReactChild | null;\n}\n\nexport const PubNubConsumer: React.FC<PubNubConsumerProps> = props => {\n  const PubNubContext = getPubNubContext();\n  return (\n    <PubNubContext.Consumer>\n      {(context: any) => {\n        invariant(\n          context && context.client,\n          'Could not find \"client\" in the context of PubNubConsumer. ' +\n            'Wrap the root component in an <PubNubProvider>.'\n        );\n        return props.children(context.client);\n      }}\n    </PubNubContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from './PubNubContext';\n\nexport interface PubNubProviderProps<T> {\n  client: T;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\nexport const PubNubProvider: React.FC<PubNubProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const PubNubContext = getPubNubContext();\n  return (\n    <PubNubContext.Consumer>\n      {(context = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'PubNubProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <PubNubContext.Provider value={context}>\n            {children}\n          </PubNubContext.Provider>\n        );\n      }}\n    </PubNubContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from '../context/PubNubContext';\n\nexport function usePubNub(): any {\n  const { client } = React.useContext(getPubNubContext());\n  invariant(\n    client,\n    'No PubNub Client instance can be found. Please ensure that you ' +\n      'have called `PubNubProvider` higher up in your tree.'\n  );\n  return client!;\n}\n"],"names":["pubNubContext","getPubNubContext","React","createContext","props","PubNubContext","Consumer","context","client","invariant","children","Object","assign","Provider","value","useContext"],"mappings":"mBAOIA,kGAEJ,SAAgBC,WACTD,IACHA,EAAgBE,EAAMC,cAAkC,KAEnDH,yBCLoD,SAAAI,OACrDC,EAAgBJ,WAEpBC,gBAACG,EAAcC,cACZ,SAACC,UAEEA,GAAWA,EAAQC,QADrBC,gBAKOL,EAAMM,SAASH,EAAQC,kCCV4B,gBAChEA,IAAAA,OACAE,IAAAA,SAEML,EAAgBJ,WAEpBC,gBAACG,EAAcC,cACZ,SAACC,mBAAAA,IAAAA,EAAU,IACNC,GAAUD,EAAQC,SAAWA,IAC/BD,EAAUI,OAAOC,OAAO,GAAIL,EAAS,CAAEC,OAAAA,KAIvCD,EAAQC,QADVC,gBAOEP,gBAACG,EAAcQ,UAASC,MAAOP,GAC5BG,uCCvBHF,EAAWN,EAAMa,WAAWd,KAA5BO,cAENA,GADFC,gBAKOD"}
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var tsInvariant = require('ts-invariant');

var pubNubContext;
function getPubNubContext() {
  if (!pubNubContext) {
    pubNubContext = React.createContext({});
  }

  return pubNubContext;
}

var PubNubProvider = function PubNubProvider(_ref) {
  var client = _ref.client,
      children = _ref.children;
  var PubNubContext = getPubNubContext();
  return React.createElement(PubNubContext.Consumer, null, function (context) {
    if (context === void 0) {
      context = {};
    }

    if (client && context.client !== client) {
      context = Object.assign({}, context, {
        client: client
      });
    }

    !context.client ?  tsInvariant.invariant(false, 'PubNubProvider was not passed a client instance. Make ' + 'sure you pass in your client via the "client" prop.')  : void 0;
    return React.createElement(PubNubContext.Provider, {
      value: context
    }, children);
  });
};

var PubNubConsumer = function PubNubConsumer(props) {
  var PubNubContext = getPubNubContext();
  return React.createElement(PubNubContext.Consumer, null, function (context) {
    !(context && context.client) ?  tsInvariant.invariant(false, 'Could not find "client" in the context of PubNubConsumer. ' + 'Wrap the root component in an <PubNubProvider>.')  : void 0;
    return props.children(context.client);
  });
};

function usePubNub() {
  var _React$useContext = React.useContext(getPubNubContext()),
      client = _React$useContext.client;

  !client ?  tsInvariant.invariant(false, 'No PubNub Client instance can be found. Please ensure that you ' + 'have called `PubNubProvider` higher up in your tree.')  : void 0;
  return client;
}

exports.PubNubConsumer = PubNubConsumer;
exports.PubNubProvider = PubNubProvider;
exports.usePubNub = usePubNub;
//# sourceMappingURL=pubnub-react.cjs.development.js.map

import React from 'react';
import { invariant } from 'ts-invariant';

var pubNubContext;
function getPubNubContext() {
  if (!pubNubContext) {
    pubNubContext = React.createContext({});
  }

  return pubNubContext;
}

var PubNubProvider = function PubNubProvider(_ref) {
  var client = _ref.client,
      children = _ref.children;
  var PubNubContext = getPubNubContext();
  return React.createElement(PubNubContext.Consumer, null, function (context) {
    if (context === void 0) {
      context = {};
    }

    if (client && context.client !== client) {
      context = Object.assign({}, context, {
        client: client
      });
    }

    !context.client ? process.env.NODE_ENV !== "production" ? invariant(false, 'PubNubProvider was not passed a client instance. Make ' + 'sure you pass in your client via the "client" prop.') : invariant(false) : void 0;
    return React.createElement(PubNubContext.Provider, {
      value: context
    }, children);
  });
};

var PubNubConsumer = function PubNubConsumer(props) {
  var PubNubContext = getPubNubContext();
  return React.createElement(PubNubContext.Consumer, null, function (context) {
    !(context && context.client) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find "client" in the context of PubNubConsumer. ' + 'Wrap the root component in an <PubNubProvider>.') : invariant(false) : void 0;
    return props.children(context.client);
  });
};

function usePubNub() {
  var _React$useContext = React.useContext(getPubNubContext()),
      client = _React$useContext.client;

  !client ? process.env.NODE_ENV !== "production" ? invariant(false, 'No PubNub Client instance can be found. Please ensure that you ' + 'have called `PubNubProvider` higher up in your tree.') : invariant(false) : void 0;
  return client;
}

export { PubNubConsumer, PubNubProvider, usePubNub };
//# sourceMappingURL=pubnub-react.esm.js.map

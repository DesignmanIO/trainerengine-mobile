{"version":3,"file":"pubnub-react.esm.js","sources":["../src/context/PubNubContext.tsx","../src/context/PubNubProvider.tsx","../src/context/PubNubConsumer.tsx","../src/hooks/usePubNub.ts"],"sourcesContent":["import React from 'react';\n\nexport interface PubNubContextValue {\n  client?: object;\n  renderPromises?: Record<any, any>;\n}\n\nlet pubNubContext: React.Context<PubNubContextValue>;\n\nexport function getPubNubContext() {\n  if (!pubNubContext) {\n    pubNubContext = React.createContext<PubNubContextValue>({});\n  }\n  return pubNubContext;\n}\n\nexport function resetPubNubContext() {\n  pubNubContext = React.createContext<PubNubContextValue>({});\n}\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from './PubNubContext';\n\nexport interface PubNubProviderProps<T> {\n  client: T;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\nexport const PubNubProvider: React.FC<PubNubProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const PubNubContext = getPubNubContext();\n  return (\n    <PubNubContext.Consumer>\n      {(context = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'PubNubProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <PubNubContext.Provider value={context}>\n            {children}\n          </PubNubContext.Provider>\n        );\n      }}\n    </PubNubContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from './PubNubContext';\n\nexport interface PubNubConsumerProps {\n  children: (client: object) => React.ReactChild | null;\n}\n\nexport const PubNubConsumer: React.FC<PubNubConsumerProps> = props => {\n  const PubNubContext = getPubNubContext();\n  return (\n    <PubNubContext.Consumer>\n      {(context: any) => {\n        invariant(\n          context && context.client,\n          'Could not find \"client\" in the context of PubNubConsumer. ' +\n            'Wrap the root component in an <PubNubProvider>.'\n        );\n        return props.children(context.client);\n      }}\n    </PubNubContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getPubNubContext } from '../context/PubNubContext';\n\nexport function usePubNub(): any {\n  const { client } = React.useContext(getPubNubContext());\n  invariant(\n    client,\n    'No PubNub Client instance can be found. Please ensure that you ' +\n      'have called `PubNubProvider` higher up in your tree.'\n  );\n  return client!;\n}\n"],"names":["pubNubContext","getPubNubContext","React","createContext","PubNubProvider","client","children","PubNubContext","Consumer","context","Object","assign","invariant","Provider","value","PubNubConsumer","props","usePubNub","useContext"],"mappings":";;;AAOA,IAAIA,aAAJ;AAEA,SAAgBC;MACV,CAACD,aAAL,EAAoB;IAClBA,aAAa,GAAGE,KAAK,CAACC,aAAN,CAAwC,EAAxC,CAAhB;;;SAEKH,aAAP;;;ICLWI,cAAc,GAAuC,SAArDA,cAAqD;MAChEC,cAAAA;MACAC,gBAAAA;MAEMC,aAAa,GAAGN,gBAAgB,EAAtC;SAEEC,mBAAA,CAACK,aAAa,CAACC,QAAf,MAAA,EACG,UAACC,OAAD;QAACA;MAAAA,UAAU;;;QACNJ,MAAM,IAAII,OAAO,CAACJ,MAAR,KAAmBA,MAAjC,EAAyC;MACvCI,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;QAAEJ,MAAM,EAANA;OAA7B,CAAV;;;KAIAI,OAAO,CAACJ,MADV,2CAAAO,SAAS,QAEP,2DACE,qDAHK,CAAT,GAAAA,SAAS,OAAT;WAOEV,mBAAA,CAACK,aAAa,CAACM,QAAf;MAAwBC,KAAK,EAAEL;KAA/B,EACGH,QADH,CADF;GAZJ,CADF;CALK;;ICAMS,cAAc,GAAkC,SAAhDA,cAAgD,CAAAC,KAAK;MAC1DT,aAAa,GAAGN,gBAAgB,EAAtC;SAEEC,mBAAA,CAACK,aAAa,CAACC,QAAf,MAAA,EACG,UAACC,OAAD;MAEGA,OAAO,IAAIA,OAAO,CAACJ,MADrB,4CAAAO,SAAS,QAEP,+DACE,iDAHK,CAAT,GAAAA,SAAS,OAAT;WAKOI,KAAK,CAACV,QAAN,CAAeG,OAAO,CAACJ,MAAvB,CAAP;GAPJ,CADF;CAFK;;SCJSY;0BACKf,KAAK,CAACgB,UAAN,CAAiBjB,gBAAgB,EAAjC;MAAXI,2BAAAA;;GAENA,MADF,2CAAAO,SAAS,QAEP,oEACE,sDAHK,CAAT,GAAAA,SAAS,OAAT;SAKOP,MAAP;;;;;"}